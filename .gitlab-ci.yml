variables:
  DOCKER_DRIVER: overlay
  PREFIX_APP: eclinic-api
  PREFIX_NAME: eclinic
  DIR_CHART: charts

cache:
  paths:
    - .m2/repository

stages:
  - build
  - deploy

docker-build:
  stage: build
  image: docker:20.10.12
  services:
    - docker:20.10.12-dind
  script:
    - |
      ENVIRON=qa
      [[ "$CI_COMMIT_TAG" =~ ^master ]] && ENVIRON=prod
      [[ $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH ]] && [[ "$CI_COMMIT_TAG" == "" ]] && ENVIRON=preprod
      [[ $CI_COMMIT_REF_NAME =~ ^sprint\/dev$ ]] && [[ "$CI_COMMIT_TAG" == "" ]] && ENVIRON=stage
    - if [[ "$CI_COMMIT_TAG" != "" ]]; then DOCKER_TAG=$(echo $CI_COMMIT_TAG | tr '/' '-')-$ENVIRON; else DOCKER_TAG="$CI_COMMIT_SHORT_SHA-$ENVIRON"; fi
    - echo "Environment [$ENVIRON] Docker Tag [$DOCKER_TAG]"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest-$ENVIRON || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest-$ENVIRON -t "$CI_REGISTRY_IMAGE":$CI_COMMIT_SHA-$ENVIRON -t "$CI_REGISTRY_IMAGE":$DOCKER_TAG -t "$CI_REGISTRY_IMAGE":latest-$ENVIRON --build-arg PROFILE=$ENVIRON .
    - docker push "$CI_REGISTRY_IMAGE":$CI_COMMIT_SHA-$ENVIRON
    - docker push "$CI_REGISTRY_IMAGE":$DOCKER_TAG
    - docker push "$CI_REGISTRY_IMAGE":latest-$ENVIRON

k8s-deploy:
  stage: deploy
  image: kgujral/helm-gcloud:1.0
  rules:
    - if: $CI_PIPELINE_SOURCE != 'merge_request_event' && ($CI_COMMIT_TAG =~ /^master\// || ($CI_COMMIT_TAG == null && ($CI_COMMIT_REF_NAME =~ /^sprint\/dev/ || $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH)))
  script:
    - |
      ENVIRON=qa
      [[ "$CI_COMMIT_TAG" =~ ^master ]] && ENVIRON=prod
      [[ $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH ]] && [[ "$CI_COMMIT_TAG" == "" ]] && ENVIRON=preprod
      [[ $CI_COMMIT_REF_NAME =~ ^sprint\/dev$ ]] && [[ "$CI_COMMIT_TAG" == "" ]] && ENVIRON=stage
    - if [ "$ENVIRON" == "prod" ]; then NAMESPACE="default"; else NAMESPACE="$ENVIRON"; fi
    - echo "Environment [$ENVIRON] Namepsace [$NAMESPACE]"
    - mkdir -p ~/.kube/ && touch ~/.kube/config && echo "$KUBE_CONFIG_PROD" > ~/.kube/config
    - helm init --client-only --stable-repo-url https://charts.helm.sh/stable
    - helm upgrade --install --force --namespace $NAMESPACE -f $DIR_CHART/values-$ENVIRON.yaml --set image.tag=$CI_COMMIT_SHA-$ENVIRON,secretName=$PREFIX_APP-$ENVIRON-secret $PREFIX_APP-$ENVIRON $DIR_CHART
